{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAM,CACJC,OAAQC,SAASC,cAAc,0BAEjCC,OAAQ,CACNC,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,0BAInC,SAASK,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAEJ,WAAUJ,SAElC,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLP,EACFK,EAAQF,GAERG,EAAOH,E,GAERR,E,IAwBPN,EAAKC,KAAKC,OAAOiB,iBAAiB,SApBf,SAAAC,GACjB,IAAMC,EAAaC,OAAOC,SAASvB,EAAKK,OAAOC,MAAMkB,OAC/CC,EAAYH,OAAOC,SAASvB,EAAKK,OAAOE,KAAKiB,OAC7CE,EAAcJ,OAAOC,SAASvB,EAAKK,OAAOG,OAAOgB,OAEvDJ,EAAMO,iBAEN,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CAIpCnB,EAHiBmB,EAAI,EACPP,EAAaO,EAAIH,GAG5BI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUJ,EAAKwB,EAALxB,MACjBR,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUJ,EAAKwB,EAALxB,MAClBR,EAAAiC,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  btns: {\n    submit: document.querySelector('button[type=\"submit\"]'),\n  },\n  fields: {\n    delay: document.querySelector('input[name=\"delay\"]'),\n    step: document.querySelector('input[name=\"step\"]'),\n    amount: document.querySelector('input[name=\"amount\"]'),\n  },\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const returnMessage = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(returnMessage);\n      } else {\n        reject(returnMessage);\n      }\n    }, delay);\n  });\n}\n\nconst onBtnClick = event => {\n  const delayValue = Number.parseInt(refs.fields.delay.value);\n  const stepValue = Number.parseInt(refs.fields.step.value);\n  const amountValue = Number.parseInt(refs.fields.amount.value);\n\n  event.preventDefault();\n\n  for (let i = 0; i < amountValue; i++) {\n    const position = i + 1;\n    const delay = delayValue + i * stepValue;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n};\nrefs.btns.submit.addEventListener('click', onBtnClick);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","btns","submit","document","querySelector","fields","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","returnMessage","Promise","resolve","reject","setTimeout","addEventListener","event","delayValue","Number","parseInt","value","stepValue","amountValue","preventDefault","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.f9c40555.js.map"}